# vim:syntax=apparmor

#include <tunables/global>

# Specified profile variables
@{APP_APPNAME}="calendar"
@{APP_ID_DBUS}="com_2eubuntu_2ecalendar_5fcalendar_5f0_2e8_2e2"
@{APP_PKGNAME_DBUS}="com_2eubuntu_2ecalendar"
@{APP_PKGNAME}="com.ubuntu.calendar"
@{APP_VERSION}="0.8.2"
@{CLICK_DIR}="{/custom/click,/opt/click.ubuntu.com,/usr/share/click/preinstalled}"

profile "com.ubuntu.calendar_calendar_0.8.2" (attach_disconnected) {
  #include <abstractions/base>
  #include <abstractions/fonts>
  #include <abstractions/X>

  # Apps fail to start when linked against newer curl/gnutls if we don't allow
  # this. (LP: #1350152)
  #include <abstractions/openssl>

  # Mir-specific stuff
  #include <abstractions/mir>

  # Needed by native GL applications on Mir
  owner /{,var/}run/user/*/mir_socket rw,

  # Hardware-specific accesses
  #include "/usr/share/apparmor/hardware/graphics.d"

  #
  # IPC rules common for all apps
  #
  # Allow connecting to session bus and where to connect to services
  #include <abstractions/dbus-session-strict>

  # Allow connecting to system bus and where to connect to services. Put these
  # here so we don't need to repeat these rules in multiple places (actual
  # communications with any system services is mediated elsewhere). This does
  # allow apps to brute-force enumerate system services, but our system
  # services aren't a secret.
  #include <abstractions/dbus-strict>

  # Unity shell
  dbus (send)
       bus=session
       path="/BottomBarVisibilityCommunicator"
       interface="org.freedesktop.DBus.{Introspectable,Properties}"
       peer=(name=com.canonical.Shell.BottomBarVisibilityCommunicator,label=unconfined),
  dbus (receive)
       bus=session
       path="/BottomBarVisibilityCommunicator"
       interface="com.canonical.Shell.BottomBarVisibilityCommunicator"
       peer=(label=unconfined),


  # Unity HUD
  dbus (send)
       bus=session
       path="/com/canonical/hud"
       interface="org.freedesktop.DBus.Properties"
       member="GetAll"
       peer=(label=unconfined),
  dbus (send)
       bus=session
       path="/com/canonical/hud"
       interface="com.canonical.hud"
       member="RegisterApplication"
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path=/com/canonical/hud/applications/@{APP_ID_DBUS}*
       peer=(label=unconfined),
  dbus (receive)
       bus=session
       path="/com/canonical/hud/publisher*"
       interface="org.gtk.Menus"
       member="Start"
       peer=(label=unconfined),
  dbus (receive)
       bus=session
       path="/com/canonical/hud/publisher*"
       interface="org.gtk.Menus"
       member="End"
       peer=(label=unconfined),
  dbus (send)
       bus=session
       path="/com/canonical/hud/publisher*"
       interface="org.gtk.Menus"
       member="Changed"
       peer=(name=org.freedesktop.DBus,label=unconfined),
  dbus (receive)
       bus=session
       path="/com/canonical/unity/actions"
       interface=org.gtk.Actions
       member={DescribeAll,Activate}
       peer=(label=unconfined),
  dbus (send)
       bus=session
       path="/com/canonical/unity/actions"
       interface=org.gtk.Actions
       member=Changed
       peer=(name=org.freedesktop.DBus,label=unconfined),
  dbus (receive)
       bus=session
       path="/context_*"
       interface=org.gtk.Actions
       member="DescribeAll"
       peer=(label=unconfined),
  dbus (receive)
       bus=session
       path="/com/canonical/hud"
       interface="com.canonical.hud"
       member="UpdatedQuery"
       peer=(label=unconfined),
  dbus (receive)
       bus=session
       interface="com.canonical.hud.Awareness"
       member="CheckAwareness"
       peer=(label=unconfined),

  # on screen keyboard (OSK)
  dbus (send)
       bus=session
       path="/org/maliit/server/address"
       interface="org.freedesktop.DBus.Properties"
       member=Get
       peer=(name=org.maliit.server,label=unconfined),
  unix (connect, receive, send)
       type=stream
       peer=(addr="@/tmp/maliit-server/dbus-*"),

  # clipboard (LP: #1371170)
  dbus (receive, send)
       bus=session
       path="/com/canonical/QtMir/Clipboard"
       interface="com.canonical.QtMir.Clipboard"
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path="/com/canonical/QtMir/Clipboard"
       interface="org.freedesktop.DBus.{Introspectable,Properties}"
       peer=(label=unconfined),

  # usensors
  dbus (send)
       bus=session
       path=/com/canonical/usensord/haptic
       interface=com.canonical.usensord.haptic
       peer=(label=unconfined),

  # URL dispatcher. All apps can call this since:
  # a) the dispatched application is launched out of process and not
  #    controllable except via the specified URL
  # b) the list of url types is strictly controlled
  # c) the dispatched application will launch in the foreground over the
  #    confined app
  dbus (send)
       bus=session
       path="/com/canonical/URLDispatcher"
       interface="com.canonical.URLDispatcher"
       member="DispatchURL"
       peer=(label=unconfined),

  # This is needed when the app is already running and needs to be passed in
  # a URL to open. This is most often used with content-hub providers and
  # url-dispatcher, but is actually supported by Qt generally (though because
  # we don't allow the send a malicious app can't send this to another app).
  dbus (receive)
       bus=session
       path=/@{APP_ID_DBUS}
       interface="org.freedesktop.Application"
       member="Open"
       peer=(label=unconfined),

  # This is needed for apps to interact with the Launcher (eg, for the counter)
  dbus (receive, send)
       bus=session
       path=/com/canonical/unity/launcher/@{APP_ID_DBUS}
       peer=(label=unconfined),

  # Untrusted Helpers are 3rd party apps that run in a different confinement
  # context and are in a separate Mir session from the calling app (eg, an
  # app that uses a content provider from another app). These helpers use
  # Trusted Prompt Sessions to overlay their window over the calling app and
  # need to get the Mir socket that was setup by the associated trusted helper
  # (eg, content-hub). Typical consumers are content-hub providers,
  # pay-service, url-dispatcher and possibly online-accounts.
  # LP: #1462492 - this rule is suboptimal and should not be needed once we
  # move to socket activation or FD passing
  dbus (receive, send)
       path=/com/canonical/UbuntuAppLaunch/@{APP_ID_DBUS}/*
       interface="com.canonical.UbuntuAppLaunch.SocketDemangler"
       member="GetMirSocket"
       bus=session
       peer=(label=unconfined),
  # Allow access to the socket-demangler (needed for the above)
  /usr/lib/@{multiarch}/ubuntu-app-launch/socket-demangler rmix,

  # TODO: finetune this
  dbus (send)
       bus=session
       peer=(name=org.a11y.Bus,label=unconfined),
  dbus (receive)
       bus=session
       interface=org.a11y.atspi**
       peer=(label=unconfined),
  dbus (receive, send)
       bus=accessibility
       peer=(label=unconfined),

  # Deny potentially dangerous access
  deny dbus bus=session
            path=/com/canonical/[Uu]nity/[Dd]ebug**,
  audit deny dbus bus=session
                  interface="com.canonical.snapdecisions",
  deny dbus (send)
       bus=session
       interface="org.gnome.GConf.Server",

  # LP: #1433590
  deny dbus bus=system
            path="/org/freedesktop/Accounts",

  # LP: #1378823
  deny dbus (bind)
       name="org.freedesktop.Application",

  # Allow access to the PasteBoard
  dbus (receive, send)
       bus=session
       interface="com.ubuntu.content.dbus.Service"
       path="/"
       member="CreatePaste"
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       interface="com.ubuntu.content.dbus.Service"
       path="/"
       member="GetPasteData"
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       interface="com.ubuntu.content.dbus.Service"
       path="/"
       member="GetLatestPasteData"
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       interface="com.ubuntu.content.dbus.Service"
       path="/"
       member="PasteFormats"
       peer=(label=unconfined),
  dbus (receive)
       bus=session
       interface="com.ubuntu.content.dbus.Service"
       path="/"
       member="PasteFormatsChanged"
       peer=(label=unconfined),

  #
  # end DBus rules common for all apps
  #

  # Don't allow apps to access scope endpoints
  audit deny /run/user/[0-9]*/zmq/   rw,
  audit deny /run/user/[0-9]*/zmq/** rwk,

  # Explicitly deny dangerous access
  audit deny /dev/input/** rw,
  deny /dev/fb0 rw, # don't use 'audit' since it is too noisy with the camera
  deny /dev/tty rw,

  # LP: #1378115
  deny /run/user/[0-9]*/dconf/user rw,
  deny owner @{HOME}/.config/dconf/user r,
  deny /custom/etc/dconf_profile r,

  # LP: #1381620
  deny @{HOME}/.cache/QML/Apps/ r,

  # subset of GNOME stuff
  /{,custom/}usr/share/icons/**              r,
  /{,custom/}usr/share/themes/**             r,
  /etc/pango/*                               r,
  /usr/lib{,32,64}/pango/**                  mr,
  /usr/lib/@{multiarch}/pango/**             mr,
  /usr/share/icons/*/index.theme             rk,
  /usr/share/unity/icons/**                  r,
  /usr/share/thumbnailer/icons/**            r,

  # /custom access
  /custom/xdg/data/themes/                   r,
  /custom/xdg/data/themes/**                 r,
  /custom/usr/share/fonts/                   r,
  /custom/usr/share/fonts/**                 r,

  # ibus read accesses
  /usr/lib/@{multiarch}/gtk-2.0/[0-9]*/immodules/im-ibus.so mr,
  owner @{HOME}/.config/ibus/      r,
  owner @{HOME}/.config/ibus/bus/  r,
  owner @{HOME}/.config/ibus/bus/* r,
  deny  @{HOME}/.config/ibus/bus/  w, # noisy and unneeded

  # subset of freedesktop.org
  /usr/share/mime/**                 r,
  owner @{HOME}/.local/share/mime/** r,
  owner @{HOME}/.config/user-dirs.dirs r,

  /usr/share/glib*/schemas/gschemas.compiled r,

  # various /proc entries (be careful to not allow things that can be used to
  # enumerate installed apps-- this will be easier once we have a PID kernel
  # var in AppArmor)
  @{PROC}/interrupts r,
  owner @{PROC}/cmdline r,
  owner @{PROC}/[0-9]*/auxv r,
  owner @{PROC}/[0-9]*/fd/ r,
  owner @{PROC}/[0-9]*/status r,
  owner @{PROC}/[0-9]*/task/ r,
  owner @{PROC}/[0-9]*/task/[0-9]*/ r,
  # FIXME: this leaks running process. Is it actually required? AppArmor kernel
  # var could solve this
  owner @{PROC}/[0-9]*/cmdline r,

  # libhybris
  /{,var/}run/shm/hybris_shm_data rw, # FIXME: LP: #1226569 (make app-specific)
  /usr/lib/@{multiarch}/libhybris/**.so mr,
  /{,android/}system/build.prop r,
  # These libraries can be in any of:
  #  /vendor/lib{,64}
  #  /system/lib{,64}
  #  /system/vendor/lib{,64}
  #  /android/vendor/lib{,64}
  #  /android/system/lib{,64}
  #  /android/system/vendor/lib{,64}
  #  /odm/lib{,64}
  #  /android/odm/lib{,64}
  /{,android/}vendor/lib{,64}/**           r,
  /{,android/}vendor/lib{,64}/**.so        m,
  /{,android/}system/lib{,64}/**           r,
  /{,android/}system/lib{,64}/**.so        m,
  /{,android/}system/vendor/lib{,64}/**    r,
  /{,android/}system/vendor/lib{,64}/**.so m,
  /{,android/}odm/lib{,64}/**    r,
  /{,android/}odm/lib{,64}/**.so m,

  # attach_disconnected path
  /{,dev/}socket/property_service rw,

  # Android logging triggered by platform. Can safely deny
  # LP: #1197124
  deny /dev/log_main w,
  deny /dev/log_radio w,
  deny /dev/log_events w,
  deny /dev/log_system w,
  # LP: #1352432
  deny /dev/xLog w,
  deny @{PROC}/xlog/  r,
  deny @{PROC}/xlog/* rw,

  # Lttng tracing. Can safely deny. LP: #1260491
  deny /{,var/}run/shm/lttng-ust-* r,

  # TODO: investigate
  deny /dev/cpuctl/apps/tasks w,
  deny /dev/cpuctl/apps/bg_non_interactive/tasks w,

  /sys/devices/system/cpu/ r,
  /sys/kernel/debug/tracing/trace_marker w,
  # LP: #1286162
  /etc/udev/udev.conf r,
  /sys/devices/pci[0-9]*/**/uevent r,
  # Not required, but noisy
  deny /run/udev/data/** r,

  #
  # thumbnailing helper
  #
  /usr/lib/@{multiarch}/thumbnailer/vs-thumb ixr,
  deny @{HOME}/.cache/tncache-write-text.null w, # silence access test
  # FIXME: this leaks running process. AppArmor kernel var could solve this
  owner @{PROC}/[0-9]*/attr/current r,
  # Allow communications with thumbnailer for thumbnailing local files
  dbus (send)
       bus=session
       interface="org.freedesktop.DBus.Introspectable"
       path="/com/canonical/Thumbnailer"
       member="Introspect"
       peer=(label=unconfined),
  dbus (send)
       bus=session
       path="/com/canonical/Thumbnailer"
       interface="com.canonical.Thumbnailer"
       member={GetThumbnail,ClientConfig}
       peer=(label=unconfined),

  #
  # apps may always use vibrations
  #
  /sys/class/timed_output/vibrator/enable rw,
  /sys/devices/virtual/timed_output/vibrator/enable rw,

  #
  # apps may always use the accelerometer and orientation sensor
  #
  /etc/xdg/QtProject/Sensors.conf r,

  #
  # qmlscene
  #
  /usr/share/qtchooser/ r,
  /usr/share/qtchooser/** r,
  /usr/lib/@{multiarch}/qt5/bin/qmlscene ixr,
  /usr/lib/qt5/bin/qmlscene ixr,

  owner @{HOME}/.config/{UITK,ubuntu-ui-toolkit}/theme.ini rk,
  audit deny @{HOME}/.config/{UITK,ubuntu-ui-toolkit}/theme.ini w,

  #
  # cordova-ubuntu
  #
  /usr/share/cordova-ubuntu*/      r,
  /usr/share/cordova-ubuntu*/**    r,

  # Launching under upstart requires this
  /usr/bin/qtchooser rmix,
  /usr/bin/cordova-ubuntu* rmix,

  /usr/lib/@{multiarch}/gstreamer*/gstreamer*/gst-plugin-scanner rix,

  # click frameworks
  /usr/share/click/frameworks/  r,
  /usr/share/click/frameworks/* r,

  # GStreamer binary registry - hybris pulls this in for everything now, not
  # just audio
  owner @{HOME}/.gstreamer*/registry.*.bin*       r,
  deny @{HOME}/.gstreamer*/registry.*.bin*        w,
  deny @{HOME}/.gstreamer*/                       w,
  owner @{HOME}/.cache/gstreamer*/registry.*.bin* r,
  deny @{HOME}/.cache/gstreamer*/registry.*.bin*  w,
  deny @{HOME}/.cache/gstreamer*/                 w,
  # gstreamer writes JIT compiled code in the form of orcexec.* files. Various
  # locations are tried so silence the ones we won't permit anyway
  deny /tmp/orcexec* w,
  deny /{,var/}run/user/*/orcexec* w,
  deny @{HOME}/orcexec* w,

  /{,android/}system/etc/media_codecs{,_*}.xml r,
  /etc/wildmidi/wildmidi.cfg r,

  # Don't allow plugins in webviews for now
  deny /usr/lib/@{multiarch}/qt5/libexec/QtWebPluginProcess rx,

  # cordova-ubuntu wants to runs lsb_release, which is a python program and we
  # don't want to give access to that. cordova-ubuntu will fallback to
  # examining /etc/lsb-release directly, which is ok. If needed, we can lift
  # the denial and ship a profile for lsb_release and add a Pxr rule
  deny /usr/bin/lsb_release rx,
  /etc/ r,
  /etc/lsb-release r,

  #
  # Application install dirs
  #

  # Click packages
  @{CLICK_DIR}/@{APP_PKGNAME}/                   r,
  @{CLICK_DIR}/@{APP_PKGNAME}/@{APP_VERSION}/    r,
  @{CLICK_DIR}/@{APP_PKGNAME}/@{APP_VERSION}/**  mrklix,

  # Packages shipped as debs have their install directory in /usr/share
  /usr/share/@{APP_PKGNAME}/ r,
  /usr/share/@{APP_PKGNAME}/** mrklix,

  #
  # Application writable dirs
  #

  # FIXME: LP: #1197060, LP: #1377648 (don't remove until qtwebkit is off the
  #        image)
  owner /{dev,run}/shm/WK2SharedMemory.[0-9]* rwk,

  # FIXME: LP: #1370218
  owner /{dev,run}/shm/shmfd-* rwk,

  # Allow writes to various (application-specific) XDG directories
  owner @{HOME}/.cache/@{APP_PKGNAME}/                  rw,      # subdir of XDG_CACHE_HOME
  owner @{HOME}/.cache/@{APP_PKGNAME}/**                mrwkl,
  owner @{HOME}/.config/@{APP_PKGNAME}/                 rw,      # subdir of XDG_CONFIG_HOME
  owner @{HOME}/.config/@{APP_PKGNAME}/**               mrwkl,
  owner @{HOME}/.local/share/@{APP_PKGNAME}/            rw,      # subdir of XDG_DATA_HOME
  owner @{HOME}/.local/share/@{APP_PKGNAME}/**          mrwklix,
  owner /{,var/}run/user/*/@{APP_PKGNAME}/              rw,      # subdir of XDG_RUNTIME_DIR
  owner /{,var/}run/user/*/@{APP_PKGNAME}/**            mrwkl,
  owner /{,var/}run/user/*/confined/@{APP_PKGNAME}/     rw,      # subdir of XDG_RUNTIME_DIR (for TMPDIR)
  owner /{,var/}run/user/*/confined/@{APP_PKGNAME}/**   mrwkl,

  # Allow writes to application-specific QML cache directories
  owner @{HOME}/.cache/QML/Apps/@{APP_PKGNAME}_@{APP_APPNAME}_@{APP_VERSION}/   rw,
  owner @{HOME}/.cache/QML/Apps/@{APP_PKGNAME}_@{APP_APPNAME}_@{APP_VERSION}/** mrwkl,

  # No abstractions specified

  # Rules specified via policy groups
  # Description: Can use Online Accounts.
  # Usage: common
  /usr/share/accounts/** r,
  
  dbus (receive, send)
       bus=session
       path=/com/google/code/AccountsSSO/SingleSignOn
       interface=com.google.code.AccountsSSO.SingleSignOn.AuthService
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path=/com/google/code/AccountsSSO/SingleSignOn{,/**}
       interface=org.freedesktop.DBus.Properties
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       interface=com.google.code.AccountsSSO.SingleSignOn.AuthSession
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       interface=com.google.code.AccountsSSO.SingleSignOn.Identity
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       interface=com.ubuntu.OnlineAccountsUi
       peer=(label=unconfined),
  dbus (receive)
       bus=session
       interface=com.google.code.AccountsSSO.Accounts
       peer=(label=unconfined),
  
  # p2p support uses a named unix socket, available only to unconfined apps.
  deny /{,var/}run/user/*/signond/socket rw,
  
  # read access to accounts.db is ok
  owner @{HOME}/.config/libaccounts-glib/accounts.db* rk,
  # FIXME: LP: #1220713 - online accounts currently tries rw and falls back to
  #        ro. This can go away once an access() LSM hook is implemented. For
  #        now, just silence the denial.
  deny @{HOME}/.config/libaccounts-glib/accounts.db* w,
  
  # apps will dereference the symlinks in this directory to access their own
  # accounts provider (which is in an app-specific directory). This is not an
  # information leak on its own because users of this policy group have read
  # access to accounts.db.
  owner @{HOME}/.local/share/accounts/** r,
  
  # Note: this API should *not* be allowed to normal apps, only the
  # webapp-container. As such, we can't explicitly deny access here but it is
  # listed as a comment to make sure it isn't accidentally added in the future.
  # audit deny dbus (receive, send)
  #                 bus=session
  #                 interface=com.nokia.singlesignonui
  #                 member=cookiesForIdentity,
  
  # Online Accounts v2 API
  dbus (receive, send)
       bus=session
       interface=com.ubuntu.OnlineAccounts.Manager
       peer=(label=unconfined),

  # Description: Can access the calendar. This policy group is reserved for
  #  vetted applications only in this version of the policy. Once LP: #1227824
  #  is fixed, this can be moved out of reserved status.
  # Usage: reserved
  
  /etc/{,writable/}timezone r,
  
  # The gsettings entries for EDS aren't required for the calendar, so
  # just silence these
  # TODO: remove when we have gsettings mediation
  deny /{,var/}run/user/*/dconf/user r,
  deny /{,var/}run/user/*/dconf/user w,
  deny @{HOME}/.config/dconf/user    r,
  
  dbus (receive, send)
       bus=session
       path=/org/gnome/evolution/dataserver/SourceManager{,/**}
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path=/org/gnome/evolution/dataserver/CalendarFactory
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path=/org/gnome/evolution/dataserver/Calendar/**
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path=/org/gnome/evolution/dataserver/CalendarView/**
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path=/org/gnome/evolution/dataserver/Subprocess{,/**}
       interface=org.gnome.evolution.dataserver.Calendar
       peer=(label=unconfined),
  
  # This interface was created specifically to allow alarms to confined apps
  dbus (receive, send)
       bus=session
       path=/com/canonical/indicator/datetime/AlarmProperties{,**}
       interface=com.canonical.indicator.datetime.AlarmProperties
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path=/com/canonical/indicator/datetime/AlarmProperties{,**}
       interface=org.freedesktop.DBus.{Introspectable,Properties}
       peer=(label=unconfined),
  
  # LP: #1319546. Apps shouldn't talk directly to sync-monitor, but allow it for
  # now for trusted apps until sync-monitor is integrated with push
  # notifications. IMPORTANT: this policy group cannot be moved to 'common'
  # status until this rule is removed.
  dbus (receive, send)
       bus=session
       path=/com/canonical/SyncMonitor{,/**}
       peer=(label=unconfined),

  # Description: Can access contacts. This policy group is reserved for vetted
  #  applications only in this version of the policy. Once LP: #1227821 is
  #  fixed, this can be moved out of reserved status.
  # Usage: reserved
  dbus (receive, send)
       bus=session
       path=/com/canonical/pim/AddressBook
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path=/com/canonical/pim/AddressBookView/**
       peer=(label=unconfined),
  
  # LP: #1319546. Apps shouldn't talk directly to sync-monitor, but allow it for
  # now for trusted apps until sync-monitor is integrated with push
  # notifications. IMPORTANT: this policy group cannot be moved to 'common'
  # status until this rule is removed.
  dbus (receive, send)
       bus=session
       path=/com/canonical/SyncMonitor{,/**}
       peer=(label=unconfined),

  # Description: Can access the network
  # Usage: common
  #include <abstractions/nameservice>
  
  # DownloadManager
  dbus (send)
       bus=session
       interface="org.freedesktop.DBus.Introspectable"
       path=/
       member=Introspect
       peer=(label=unconfined),
  dbus (send)
       bus=session
       interface="org.freedesktop.DBus.Introspectable"
       path=/com/canonical/applications/download/**
       member=Introspect
       peer=(label=unconfined),
  # Allow DownloadManager to send us signals, etc
  dbus (receive)
       bus=session
       interface=com.canonical.applications.Download{,er}Manager
       peer=(label=unconfined),
  # Restrict apps to just their own downloads
  owner @{HOME}/.local/share/ubuntu-download-manager/@{APP_PKGNAME}/   rw,
  owner @{HOME}/.local/share/ubuntu-download-manager/@{APP_PKGNAME}/** rwk,
  dbus (receive, send)
       bus=session
       path=/com/canonical/applications/download/@{APP_ID_DBUS}/**
       interface=com.canonical.applications.Download
       peer=(label=unconfined),
  dbus (receive, send)
       bus=session
       path=/com/canonical/applications/download/@{APP_ID_DBUS}/**
       interface=com.canonical.applications.GroupDownload
       peer=(label=unconfined),
  # Be explicit about the allowed members we can send to
  dbus (send)
       bus=session
       path=/
       interface=com.canonical.applications.DownloadManager
       member=createDownload
       peer=(label=unconfined),
  dbus (send)
       bus=session
       path=/
       interface=com.canonical.applications.DownloadManager
       member=createDownloadGroup
       peer=(label=unconfined),
  dbus (send)
       bus=session
       path=/
       interface=com.canonical.applications.DownloadManager
       member=getAllDownloads
       peer=(label=unconfined),
  dbus (send)
       bus=session
       path=/
       interface=com.canonical.applications.DownloadManager
       member=getAllDownloadsWithMetadata
       peer=(label=unconfined),
  dbus (send)
       bus=session
       path=/
       interface=com.canonical.applications.DownloadManager
       member=defaultThrottle
       peer=(label=unconfined),
  dbus (send)
       bus=session
       path=/
       interface=com.canonical.applications.DownloadManager
       member=isGSMDownloadAllowed
       peer=(label=unconfined),
  # Explicitly deny DownloadManager APIs apps shouldn't have access to in order
  # to make sure they aren't accidentally added in the future (see LP: #1277578
  # for details)
  audit deny dbus (send)
       bus=session
       interface=com.canonical.applications.DownloadManager
       member=allowGSMDownload,
  audit deny dbus (send)
       bus=session
       interface=com.canonical.applications.DownloadManager
       member=createMmsDownload,
  audit deny dbus (send)
       bus=session
       interface=com.canonical.applications.DownloadManager
       member=exit,
  audit deny dbus (send)
       bus=session
       interface=com.canonical.applications.DownloadManager
       member=setDefaultThrottle,
  
  # We want to explicitly deny access to NetworkManager because its DBus API
  # gives away too much
  deny dbus (receive, send)
       bus=system
       path=/org/freedesktop/NetworkManager,
  deny dbus (receive, send)
       bus=system
       peer=(name=org.freedesktop.NetworkManager),
  
  # Do the same for ofono (LP: #1226844)
  deny dbus (receive, send)
       bus=system
       interface="org.ofono.Manager",

  # Description: Can use push notifications as a client
  # Usage: common
  
  dbus (receive, send)
       bus=session
       interface=com.ubuntu.PushNotifications
       path=/com/ubuntu/PushNotifications/@{APP_PKGNAME_DBUS}{,/**}
       peer=(label=unconfined),
  
  dbus (receive, send)
       bus=session
       interface=com.ubuntu.Postal
       path=/com/ubuntu/Postal/@{APP_PKGNAME_DBUS}{,/**}
       peer=(label=unconfined),
  
  dbus (receive, send)
       bus=session
       path=/com/ubuntu/connectivity1/NetworkingStatus
       peer=(label=unconfined),
  
  # Some push helpers are written in python. This isn't strictly allowed since
  # frameworks don't support yet, but silence these to avoid confusion
  deny /usr/local/lib/python*/** r,

  # Specified read permissions
  /etc/writable/timezone rk,

  # No write paths specified
}
